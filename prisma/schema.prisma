// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String
  username    String
  password    String
  posts       Post[]
  updoot      Updoot[]
  memberships Memberships[]
  comment     Comment[]

  @@unique([username, email])
}

model Post {
  id          Int        @id @default(autoincrement())
  author      User       @relation(fields: [authorId], references: [id])
  authorId    Int
  title       String
  text        String
  point       Int        @default(0)
  voteStatus  Int        @default(0)
  createAt    DateTime   @default(now())
  updateAt    DateTime   @updatedAt
  updoots     Updoot[]
  subreddit   Subreddit? @relation(fields: [subredditId], references: [id])
  subredditId Int?
  comment     Comment[]
}

model Updoot {
  id     Int   @id @default(autoincrement())
  value  Int
  post   Post? @relation(fields: [postId], references: [id])
  postId Int?
  user   User? @relation(fields: [userId], references: [id])
  userId Int
}

model Subreddit {
  id          Int           @id @default(autoincrement())
  name        String        @unique()
  about       String
  memberships Memberships[]
  post        Post[]
}

model Memberships {
  id          Int        @id @default(autoincrement())
  member      User       @relation(fields: [memberId], references: [id])
  memberId    Int
  subreddit   Subreddit  @relation(fields: [subredditId], references: [id])
  subredditId Int
  role        MemberRole @default(USER)
}

model Comment {
  id      Int    @id @default(autoincrement())
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId Int
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
  text    String
}

enum MemberRole {
  USER
  OWNER
}
